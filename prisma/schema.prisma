generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Blog {
  id          String     @default(cuid()) @id
  title       String
  content     String?
  published   Boolean   @default(false)
  image       String?
  userId      User?     @relation(fields: [userId], references: [id]) @map(name: "user_id")
  tags        String[]  @default([])
  category    String[]  @default([])
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "blogs")
}

model Project {
  id                String    @default(cuid()) @id
  name              String
  description       String?
  tags              String[]  @default([])
  image             String?
  sourceCodeLink    String?   @map(name: "source_code_link")
  liveDemoLink      String?   @map(name: "live_demo_link")
  link              String?
  category          String[]  @default([])
  userId            User?     @relation(fields: [userId], references: [id]) @map(name: "user_id")
  createdAt         DateTime  @default(now()) @map(name: "created_at")
  updatedAt         DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "projects")
}

model User {
  id            String    @default(cuid()) @id
  name          String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  blogs         Blog[]
  projects      Project[]
  @@map(name: "users")
}
